# Основной конфигурационный файл Nginx
user www-data; # Пользователь, под которым работает Nginx
worker_processes auto; # Количество воркеров
error_log /var/log/nginx/error.log warn; # Лог ошибок
pid /var/run/nginx.pid; # PID файл

events {
    worker_connections 1024; # Количество соединений на один воркер
}

http {
    default_type application/octet-stream;

    # Формат логов
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Оптимизация передачи данных
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types; # MIME типы
    default_type application/octet-stream;

    # Сжатие данных для клиента
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Серверный блок
    server {
        listen 80;
        server_name example.com www.example.com;

        # Укажите путь к корневой директории проекта
        root /path/to/project/packages/client/dist;
        index index.html;

        # CSP и другие заголовки безопасности
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://trusted-scripts.example.com; style-src 'self' 'unsafe-inline' https://trusted-styles.example.com; img-src 'self' data: https://trusted-images.example.com; font-src 'self' https://trusted-fonts.example.com;" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";

        # Обслуживание статики
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Проксирование API запросов
        location /api/ {
            proxy_pass http://127.0.0.1:5000; # Замените на адрес вашего бэкенда
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Обработка ошибок
        error_page 404 /404.html;
        location = /404.html {
            root /path/to/project/packages/client/dist;
        }
    }
}